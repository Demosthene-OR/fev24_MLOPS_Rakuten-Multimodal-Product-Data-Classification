# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
name: Python application with Docker Compose

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    name: Check tests
    runs-on: ubuntu-latest

    env:
      ACCESS_TOKEN_AUTH_0: ${{ secrets.ACCESS_TOKEN_AUTH_0 }}
      ACCESS_TOKEN_AUTH_1: ${{ secrets.ACCESS_TOKEN_AUTH_1 }}
      ACCESS_TOKEN_AUTH_2: ${{ secrets.ACCESS_TOKEN_AUTH_2 }}
      MYSQL_ROOT_PWD: $({secrets.MYSQL_ROOT_PWD})

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f src/requirements.txt ]; then pip install -r src/requirements.txt; fi

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Set up Docker
      uses: docker/setup-buildx-action@v1

    - name: Set up environment variables
      run: |
        echo "ACCESS_TOKEN_AUTH_2=${ACCESS_TOKEN_AUTH_0}" >> .env
        echo "ACCESS_TOKEN_AUTH_2=${ACCESS_TOKEN_AUTH_1}" >> .env
        echo "ACCESS_TOKEN_AUTH_2=${ACCESS_TOKEN_AUTH_2}" >> .env
        echo "MYSQL_ROOT_PWD=${MYSQL_ROOT_PWD}" >> .env

    - name: Set up Docker Compose
      run: |
        sudo apt-get update && sudo apt-get install -y docker-compose

    - name: Run Docker Compose setup script
      run: |
        chmod +x ./docker/setup.sh
        ./docker/setup.sh

    - name: Test with pytest
      run: |
        pytest tests/


